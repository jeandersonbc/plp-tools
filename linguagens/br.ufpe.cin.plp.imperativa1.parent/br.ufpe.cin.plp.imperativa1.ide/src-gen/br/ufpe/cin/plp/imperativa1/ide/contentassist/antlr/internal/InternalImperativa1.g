/*
 * generated by Xtext 2.9.2
 */
grammar InternalImperativa1;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package br.ufpe.cin.plp.imperativa1.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufpe.cin.plp.imperativa1.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import br.ufpe.cin.plp.imperativa1.services.Imperativa1GrammarAccess;

}
@parser::members {
	private Imperativa1GrammarAccess grammarAccess;

	public void setGrammarAccess(Imperativa1GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getComandosAssignment()); }
		(rule__Model__ComandosAssignment)*
		{ after(grammarAccess.getModelAccess().getComandosAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComando
entryRuleComando
:
{ before(grammarAccess.getComandoRule()); }
	 ruleComando
{ after(grammarAccess.getComandoRule()); } 
	 EOF 
;

// Rule Comando
ruleComando 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoAccess().getAlternatives()); }
		(rule__Comando__Alternatives)
		{ after(grammarAccess.getComandoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenciaComando
entryRuleSequenciaComando
:
{ before(grammarAccess.getSequenciaComandoRule()); }
	 ruleSequenciaComando
{ after(grammarAccess.getSequenciaComandoRule()); } 
	 EOF 
;

// Rule SequenciaComando
ruleSequenciaComando 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenciaComandoAccess().getGroup()); }
		(rule__SequenciaComando__Group__0)
		{ after(grammarAccess.getSequenciaComandoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIO
entryRuleIO
:
{ before(grammarAccess.getIORule()); }
	 ruleIO
{ after(grammarAccess.getIORule()); } 
	 EOF 
;

// Rule IO
ruleIO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIOAccess().getAlternatives()); }
		(rule__IO__Alternatives)
		{ after(grammarAccess.getIOAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRead
entryRuleRead
:
{ before(grammarAccess.getReadRule()); }
	 ruleRead
{ after(grammarAccess.getReadRule()); } 
	 EOF 
;

// Rule Read
ruleRead 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadAccess().getGroup()); }
		(rule__Read__Group__0)
		{ after(grammarAccess.getReadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWrite
entryRuleWrite
:
{ before(grammarAccess.getWriteRule()); }
	 ruleWrite
{ after(grammarAccess.getWriteRule()); } 
	 EOF 
;

// Rule Write
ruleWrite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWriteAccess().getGroup()); }
		(rule__Write__Group__0)
		{ after(grammarAccess.getWriteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfThenElse
entryRuleIfThenElse
:
{ before(grammarAccess.getIfThenElseRule()); }
	 ruleIfThenElse
{ after(grammarAccess.getIfThenElseRule()); } 
	 EOF 
;

// Rule IfThenElse
ruleIfThenElse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfThenElseAccess().getGroup()); }
		(rule__IfThenElse__Group__0)
		{ after(grammarAccess.getIfThenElseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSkip
entryRuleSkip
:
{ before(grammarAccess.getSkipRule()); }
	 ruleSkip
{ after(grammarAccess.getSkipRule()); } 
	 EOF 
;

// Rule Skip
ruleSkip 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSkipAccess().getSkipAssignment()); }
		(rule__Skip__SkipAssignment)
		{ after(grammarAccess.getSkipAccess().getSkipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtribuicao
entryRuleAtribuicao
:
{ before(grammarAccess.getAtribuicaoRule()); }
	 ruleAtribuicao
{ after(grammarAccess.getAtribuicaoRule()); } 
	 EOF 
;

// Rule Atribuicao
ruleAtribuicao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtribuicaoAccess().getGroup()); }
		(rule__Atribuicao__Group__0)
		{ after(grammarAccess.getAtribuicaoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePId
entryRulePId
:
{ before(grammarAccess.getPIdRule()); }
	 rulePId
{ after(grammarAccess.getPIdRule()); } 
	 EOF 
;

// Rule PId
rulePId 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPIdAccess().getGroup()); }
		(rule__PId__Group__0)
		{ after(grammarAccess.getPIdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValor
entryRuleValor
:
{ before(grammarAccess.getValorRule()); }
	 ruleValor
{ after(grammarAccess.getValorRule()); } 
	 EOF 
;

// Rule Valor
ruleValor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValorAccess().getAlternatives()); }
		(rule__Valor__Alternatives)
		{ after(grammarAccess.getValorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpMenos
entryRuleExpMenos
:
{ before(grammarAccess.getExpMenosRule()); }
	 ruleExpMenos
{ after(grammarAccess.getExpMenosRule()); } 
	 EOF 
;

// Rule ExpMenos
ruleExpMenos 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpMenosAccess().getGroup()); }
		(rule__ExpMenos__Group__0)
		{ after(grammarAccess.getExpMenosAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpNot
entryRuleExpNot
:
{ before(grammarAccess.getExpNotRule()); }
	 ruleExpNot
{ after(grammarAccess.getExpNotRule()); } 
	 EOF 
;

// Rule ExpNot
ruleExpNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpNotAccess().getGroup()); }
		(rule__ExpNot__Group__0)
		{ after(grammarAccess.getExpNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpLenght
entryRuleExpLenght
:
{ before(grammarAccess.getExpLenghtRule()); }
	 ruleExpLenght
{ after(grammarAccess.getExpLenghtRule()); } 
	 EOF 
;

// Rule ExpLenght
ruleExpLenght 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpLenghtAccess().getGroup()); }
		(rule__ExpLenght__Group__0)
		{ after(grammarAccess.getExpLenghtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpPrimaria
entryRuleExpPrimaria
:
{ before(grammarAccess.getExpPrimariaRule()); }
	 ruleExpPrimaria
{ after(grammarAccess.getExpPrimariaRule()); } 
	 EOF 
;

// Rule ExpPrimaria
ruleExpPrimaria 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpPrimariaAccess().getAlternatives()); }
		(rule__ExpPrimaria__Alternatives)
		{ after(grammarAccess.getExpPrimariaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpUnaria
entryRuleExpUnaria
:
{ before(grammarAccess.getExpUnariaRule()); }
	 ruleExpUnaria
{ after(grammarAccess.getExpUnariaRule()); } 
	 EOF 
;

// Rule ExpUnaria
ruleExpUnaria 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpUnariaAccess().getAlternatives()); }
		(rule__ExpUnaria__Alternatives)
		{ after(grammarAccess.getExpUnariaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpBinaria
entryRuleExpBinaria
:
{ before(grammarAccess.getExpBinariaRule()); }
	 ruleExpBinaria
{ after(grammarAccess.getExpBinariaRule()); } 
	 EOF 
;

// Rule ExpBinaria
ruleExpBinaria 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpBinariaAccess().getAlternatives()); }
		(rule__ExpBinaria__Alternatives)
		{ after(grammarAccess.getExpBinariaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpSoma
entryRuleExpSoma
:
{ before(grammarAccess.getExpSomaRule()); }
	 ruleExpSoma
{ after(grammarAccess.getExpSomaRule()); } 
	 EOF 
;

// Rule ExpSoma
ruleExpSoma 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpSomaAccess().getGroup()); }
		(rule__ExpSoma__Group__0)
		{ after(grammarAccess.getExpSomaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpSub
entryRuleExpSub
:
{ before(grammarAccess.getExpSubRule()); }
	 ruleExpSub
{ after(grammarAccess.getExpSubRule()); } 
	 EOF 
;

// Rule ExpSub
ruleExpSub 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpSubAccess().getGroup()); }
		(rule__ExpSub__Group__0)
		{ after(grammarAccess.getExpSubAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpAnd
entryRuleExpAnd
:
{ before(grammarAccess.getExpAndRule()); }
	 ruleExpAnd
{ after(grammarAccess.getExpAndRule()); } 
	 EOF 
;

// Rule ExpAnd
ruleExpAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAndAccess().getGroup()); }
		(rule__ExpAnd__Group__0)
		{ after(grammarAccess.getExpAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpOr
entryRuleExpOr
:
{ before(grammarAccess.getExpOrRule()); }
	 ruleExpOr
{ after(grammarAccess.getExpOrRule()); } 
	 EOF 
;

// Rule ExpOr
ruleExpOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpOrAccess().getGroup()); }
		(rule__ExpOr__Group__0)
		{ after(grammarAccess.getExpOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpEquals
entryRuleExpEquals
:
{ before(grammarAccess.getExpEqualsRule()); }
	 ruleExpEquals
{ after(grammarAccess.getExpEqualsRule()); } 
	 EOF 
;

// Rule ExpEquals
ruleExpEquals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpEqualsAccess().getGroup()); }
		(rule__ExpEquals__Group__0)
		{ after(grammarAccess.getExpEqualsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpConcat
entryRuleExpConcat
:
{ before(grammarAccess.getExpConcatRule()); }
	 ruleExpConcat
{ after(grammarAccess.getExpConcatRule()); } 
	 EOF 
;

// Rule ExpConcat
ruleExpConcat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpConcatAccess().getGroup()); }
		(rule__ExpConcat__Group__0)
		{ after(grammarAccess.getExpConcatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressao
entryRuleExpressao
:
{ before(grammarAccess.getExpressaoRule()); }
	 ruleExpressao
{ after(grammarAccess.getExpressaoRule()); } 
	 EOF 
;

// Rule Expressao
ruleExpressao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressaoAccess().getAlternatives()); }
		(rule__Expressao__Alternatives)
		{ after(grammarAccess.getExpressaoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComandoSimples
entryRuleComandoSimples
:
{ before(grammarAccess.getComandoSimplesRule()); }
	 ruleComandoSimples
{ after(grammarAccess.getComandoSimplesRule()); } 
	 EOF 
;

// Rule ComandoSimples
ruleComandoSimples 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getAlternatives()); }
		(rule__ComandoSimples__Alternatives)
		{ after(grammarAccess.getComandoSimplesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComandoDeclaracao
entryRuleComandoDeclaracao
:
{ before(grammarAccess.getComandoDeclaracaoRule()); }
	 ruleComandoDeclaracao
{ after(grammarAccess.getComandoDeclaracaoRule()); } 
	 EOF 
;

// Rule ComandoDeclaracao
ruleComandoDeclaracao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoDeclaracaoAccess().getGroup()); }
		(rule__ComandoDeclaracao__Group__0)
		{ after(grammarAccess.getComandoDeclaracaoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaracao
entryRuleDeclaracao
:
{ before(grammarAccess.getDeclaracaoRule()); }
	 ruleDeclaracao
{ after(grammarAccess.getDeclaracaoRule()); } 
	 EOF 
;

// Rule Declaracao
ruleDeclaracao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaracaoAccess().getAlternatives()); }
		(rule__Declaracao__Alternatives)
		{ after(grammarAccess.getDeclaracaoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaracaoComposta
entryRuleDeclaracaoComposta
:
{ before(grammarAccess.getDeclaracaoCompostaRule()); }
	 ruleDeclaracaoComposta
{ after(grammarAccess.getDeclaracaoCompostaRule()); } 
	 EOF 
;

// Rule DeclaracaoComposta
ruleDeclaracaoComposta 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaracaoCompostaAccess().getGroup()); }
		(rule__DeclaracaoComposta__Group__0)
		{ after(grammarAccess.getDeclaracaoCompostaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaracaoVariavel
entryRuleDeclaracaoVariavel
:
{ before(grammarAccess.getDeclaracaoVariavelRule()); }
	 ruleDeclaracaoVariavel
{ after(grammarAccess.getDeclaracaoVariavelRule()); } 
	 EOF 
;

// Rule DeclaracaoVariavel
ruleDeclaracaoVariavel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaracaoVariavelAccess().getGroup()); }
		(rule__DeclaracaoVariavel__Group__0)
		{ after(grammarAccess.getDeclaracaoVariavelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comando__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoAccess().getSequenciaComandoAssignment_0()); }
		(rule__Comando__SequenciaComandoAssignment_0)
		{ after(grammarAccess.getComandoAccess().getSequenciaComandoAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getComandoAccess().getComandoSimplesAssignment_1()); }
		(rule__Comando__ComandoSimplesAssignment_1)
		{ after(grammarAccess.getComandoAccess().getComandoSimplesAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IO__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIOAccess().getReadAssignment_0()); }
		(rule__IO__ReadAssignment_0)
		{ after(grammarAccess.getIOAccess().getReadAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIOAccess().getWriteAssignment_1()); }
		(rule__IO__WriteAssignment_1)
		{ after(grammarAccess.getIOAccess().getWriteAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PId__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPIdAccess().getVALORSTRINGTerminalRuleCall_1_0()); }
		RULE_VALORSTRING
		{ after(grammarAccess.getPIdAccess().getVALORSTRINGTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPIdAccess().getVALORINTEIROTerminalRuleCall_1_1()); }
		RULE_VALORINTEIRO
		{ after(grammarAccess.getPIdAccess().getVALORINTEIROTerminalRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValorAccess().getIntTypeAssignment_0()); }
		(rule__Valor__IntTypeAssignment_0)
		{ after(grammarAccess.getValorAccess().getIntTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValorAccess().getStringTypeAssignment_1()); }
		(rule__Valor__StringTypeAssignment_1)
		{ after(grammarAccess.getValorAccess().getStringTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValorAccess().getBoolTypeAssignment_2()); }
		(rule__Valor__BoolTypeAssignment_2)
		{ after(grammarAccess.getValorAccess().getBoolTypeAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpPrimariaAccess().getPidAssignment_0()); }
		(rule__ExpPrimaria__PidAssignment_0)
		{ after(grammarAccess.getExpPrimariaAccess().getPidAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpPrimariaAccess().getValorAssignment_1()); }
		(rule__ExpPrimaria__ValorAssignment_1)
		{ after(grammarAccess.getExpPrimariaAccess().getValorAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpPrimariaAccess().getGroup_2()); }
		(rule__ExpPrimaria__Group_2__0)
		{ after(grammarAccess.getExpPrimariaAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpUnariaAccess().getMenosExpressaoAssignment_0()); }
		(rule__ExpUnaria__MenosExpressaoAssignment_0)
		{ after(grammarAccess.getExpUnariaAccess().getMenosExpressaoAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpUnariaAccess().getNotExpressaoAssignment_1()); }
		(rule__ExpUnaria__NotExpressaoAssignment_1)
		{ after(grammarAccess.getExpUnariaAccess().getNotExpressaoAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpUnariaAccess().getLengthExpressaoAssignment_2()); }
		(rule__ExpUnaria__LengthExpressaoAssignment_2)
		{ after(grammarAccess.getExpUnariaAccess().getLengthExpressaoAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpBinaria__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpBinariaAccess().getSomaExpressaoAssignment_0()); }
		(rule__ExpBinaria__SomaExpressaoAssignment_0)
		{ after(grammarAccess.getExpBinariaAccess().getSomaExpressaoAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpBinariaAccess().getSubExpressaoAssignment_1()); }
		(rule__ExpBinaria__SubExpressaoAssignment_1)
		{ after(grammarAccess.getExpBinariaAccess().getSubExpressaoAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpBinariaAccess().getOrExpressaoAssignment_2()); }
		(rule__ExpBinaria__OrExpressaoAssignment_2)
		{ after(grammarAccess.getExpBinariaAccess().getOrExpressaoAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpBinariaAccess().getAndExpressaoAssignment_3()); }
		(rule__ExpBinaria__AndExpressaoAssignment_3)
		{ after(grammarAccess.getExpBinariaAccess().getAndExpressaoAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpBinariaAccess().getEqualsExpressaoAssignment_4()); }
		(rule__ExpBinaria__EqualsExpressaoAssignment_4)
		{ after(grammarAccess.getExpBinariaAccess().getEqualsExpressaoAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpBinariaAccess().getConcatExpressaoAssignment_5()); }
		(rule__ExpBinaria__ConcatExpressaoAssignment_5)
		{ after(grammarAccess.getExpBinariaAccess().getConcatExpressaoAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressao__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressaoAccess().getExpUnariaAssignment_0()); }
		(rule__Expressao__ExpUnariaAssignment_0)
		{ after(grammarAccess.getExpressaoAccess().getExpUnariaAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressaoAccess().getExpPrimariaAssignment_1()); }
		(rule__Expressao__ExpPrimariaAssignment_1)
		{ after(grammarAccess.getExpressaoAccess().getExpPrimariaAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressaoAccess().getExpBinariaAssignment_2()); }
		(rule__Expressao__ExpBinariaAssignment_2)
		{ after(grammarAccess.getExpressaoAccess().getExpBinariaAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getSkipAssignment_0()); }
		(rule__ComandoSimples__SkipAssignment_0)
		{ after(grammarAccess.getComandoSimplesAccess().getSkipAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getComandoSimplesAccess().getAtribuicaoAssignment_1()); }
		(rule__ComandoSimples__AtribuicaoAssignment_1)
		{ after(grammarAccess.getComandoSimplesAccess().getAtribuicaoAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getComandoSimplesAccess().getComandoDeclaracaoAssignment_2()); }
		(rule__ComandoSimples__ComandoDeclaracaoAssignment_2)
		{ after(grammarAccess.getComandoSimplesAccess().getComandoDeclaracaoAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getComandoSimplesAccess().getWhileAssignment_3()); }
		(rule__ComandoSimples__WhileAssignment_3)
		{ after(grammarAccess.getComandoSimplesAccess().getWhileAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getComandoSimplesAccess().getIfThenElseAssignment_4()); }
		(rule__ComandoSimples__IfThenElseAssignment_4)
		{ after(grammarAccess.getComandoSimplesAccess().getIfThenElseAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getComandoSimplesAccess().getIoAssignment_5()); }
		(rule__ComandoSimples__IoAssignment_5)
		{ after(grammarAccess.getComandoSimplesAccess().getIoAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getComandoSimplesAccess().getGroup_6()); }
		(rule__ComandoSimples__Group_6__0)
		{ after(grammarAccess.getComandoSimplesAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoAccess().getDecCompostaAssignment_0()); }
		(rule__Declaracao__DecCompostaAssignment_0)
		{ after(grammarAccess.getDeclaracaoAccess().getDecCompostaAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaracaoAccess().getDecVariavelAssignment_1()); }
		(rule__Declaracao__DecVariavelAssignment_1)
		{ after(grammarAccess.getDeclaracaoAccess().getDecVariavelAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaracaoAccess().getGroup_2()); }
		(rule__Declaracao__Group_2__0)
		{ after(grammarAccess.getDeclaracaoAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenciaComando__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenciaComando__Group__0__Impl
	rule__SequenciaComando__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenciaComando__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenciaComandoAccess().getComandoSimplesAssignment_0()); }
	(rule__SequenciaComando__ComandoSimplesAssignment_0)
	{ after(grammarAccess.getSequenciaComandoAccess().getComandoSimplesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenciaComando__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenciaComando__Group__1__Impl
	rule__SequenciaComando__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenciaComando__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenciaComandoAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getSequenciaComandoAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenciaComando__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenciaComando__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenciaComando__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenciaComandoAccess().getComandoAssignment_2()); }
	(rule__SequenciaComando__ComandoAssignment_2)
	{ after(grammarAccess.getSequenciaComandoAccess().getComandoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Read__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group__0__Impl
	rule__Read__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getReadKeyword_0()); }
	'read'
	{ after(grammarAccess.getReadAccess().getReadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group__1__Impl
	rule__Read__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReadAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group__2__Impl
	rule__Read__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getPidAssignment_2()); }
	(rule__Read__PidAssignment_2)
	{ after(grammarAccess.getReadAccess().getPidAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getReadAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Write__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group__0__Impl
	rule__Write__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getWriteKeyword_0()); }
	'write'
	{ after(grammarAccess.getWriteAccess().getWriteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group__1__Impl
	rule__Write__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWriteAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group__2__Impl
	rule__Write__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getExpressaoAssignment_2()); }
	(rule__Write__ExpressaoAssignment_2)
	{ after(grammarAccess.getWriteAccess().getExpressaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWriteAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElse__Group__0__Impl
	rule__IfThenElse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfThenElseAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElse__Group__1__Impl
	rule__IfThenElse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseAccess().getExpressaoAssignment_1()); }
	(rule__IfThenElse__ExpressaoAssignment_1)
	{ after(grammarAccess.getIfThenElseAccess().getExpressaoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElse__Group__2__Impl
	rule__IfThenElse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfThenElseAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElse__Group__3__Impl
	rule__IfThenElse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseAccess().getComandoAssignment_3()); }
	(rule__IfThenElse__ComandoAssignment_3)
	{ after(grammarAccess.getIfThenElseAccess().getComandoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElse__Group__4__Impl
	rule__IfThenElse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getIfThenElseAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElse__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseAccess().getComandoAssignment_5()); }
	(rule__IfThenElse__ComandoAssignment_5)
	{ after(grammarAccess.getIfThenElseAccess().getComandoAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getExpressaoAssignment_1()); }
	(rule__While__ExpressaoAssignment_1)
	{ after(grammarAccess.getWhileAccess().getExpressaoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getWhileAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getComandoAssignment_3()); }
	(rule__While__ComandoAssignment_3)
	{ after(grammarAccess.getWhileAccess().getComandoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atribuicao__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atribuicao__Group__0__Impl
	rule__Atribuicao__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atribuicao__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtribuicaoAccess().getPidAssignment_0()); }
	(rule__Atribuicao__PidAssignment_0)
	{ after(grammarAccess.getAtribuicaoAccess().getPidAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atribuicao__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atribuicao__Group__1__Impl
	rule__Atribuicao__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atribuicao__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtribuicaoAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getAtribuicaoAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atribuicao__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atribuicao__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atribuicao__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtribuicaoAccess().getExpressaoAssignment_2()); }
	(rule__Atribuicao__ExpressaoAssignment_2)
	{ after(grammarAccess.getAtribuicaoAccess().getExpressaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PId__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PId__Group__0__Impl
	rule__PId__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PId__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPIdAccess().getVALORSTRINGTerminalRuleCall_0()); }
	RULE_VALORSTRING
	{ after(grammarAccess.getPIdAccess().getVALORSTRINGTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PId__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PId__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PId__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPIdAccess().getAlternatives_1()); }
	(rule__PId__Alternatives_1)*
	{ after(grammarAccess.getPIdAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpMenos__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpMenos__Group__0__Impl
	rule__ExpMenos__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpMenos__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpMenosAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getExpMenosAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpMenos__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpMenos__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpMenos__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpMenosAccess().getMenosExpressaoAssignment_1()); }
	(rule__ExpMenos__MenosExpressaoAssignment_1)
	{ after(grammarAccess.getExpMenosAccess().getMenosExpressaoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpNot__Group__0__Impl
	rule__ExpNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpNotAccess().getNotKeyword_0()); }
	'not'
	{ after(grammarAccess.getExpNotAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpNot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpNotAccess().getNotExpressaoAssignment_1()); }
	(rule__ExpNot__NotExpressaoAssignment_1)
	{ after(grammarAccess.getExpNotAccess().getNotExpressaoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpLenght__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpLenght__Group__0__Impl
	rule__ExpLenght__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpLenght__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpLenghtAccess().getLengthKeyword_0()); }
	'length'
	{ after(grammarAccess.getExpLenghtAccess().getLengthKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpLenght__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpLenght__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpLenght__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpLenghtAccess().getLengthExpressaoAssignment_1()); }
	(rule__ExpLenght__LengthExpressaoAssignment_1)
	{ after(grammarAccess.getExpLenghtAccess().getLengthExpressaoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpPrimaria__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpPrimaria__Group_2__0__Impl
	rule__ExpPrimaria__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpPrimariaAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getExpPrimariaAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpPrimaria__Group_2__1__Impl
	rule__ExpPrimaria__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpPrimariaAccess().getExpressaoAssignment_2_1()); }
	(rule__ExpPrimaria__ExpressaoAssignment_2_1)
	{ after(grammarAccess.getExpPrimariaAccess().getExpressaoAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpPrimaria__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpPrimariaAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getExpPrimariaAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpSoma__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSoma__Group__0__Impl
	rule__ExpSoma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSoma__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSomaAccess().getValorAssignment_0()); }
	(rule__ExpSoma__ValorAssignment_0)
	{ after(grammarAccess.getExpSomaAccess().getValorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSoma__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSoma__Group__1__Impl
	rule__ExpSoma__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSoma__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSomaAccess().getPlusSignKeyword_1()); }
	'+'
	{ after(grammarAccess.getExpSomaAccess().getPlusSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSoma__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSoma__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSoma__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSomaAccess().getExpressaoAssignment_2()); }
	(rule__ExpSoma__ExpressaoAssignment_2)
	{ after(grammarAccess.getExpSomaAccess().getExpressaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpSub__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSub__Group__0__Impl
	rule__ExpSub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSub__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSubAccess().getValorAssignment_0()); }
	(rule__ExpSub__ValorAssignment_0)
	{ after(grammarAccess.getExpSubAccess().getValorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSub__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSub__Group__1__Impl
	rule__ExpSub__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSub__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSubAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getExpSubAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSub__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSub__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSub__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSubAccess().getExpressaoAssignment_2()); }
	(rule__ExpSub__ExpressaoAssignment_2)
	{ after(grammarAccess.getExpSubAccess().getExpressaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpAnd__Group__0__Impl
	rule__ExpAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAndAccess().getValorAssignment_0()); }
	(rule__ExpAnd__ValorAssignment_0)
	{ after(grammarAccess.getExpAndAccess().getValorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpAnd__Group__1__Impl
	rule__ExpAnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAndAccess().getAndKeyword_1()); }
	'and'
	{ after(grammarAccess.getExpAndAccess().getAndKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpAnd__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAndAccess().getExpressaoAssignment_2()); }
	(rule__ExpAnd__ExpressaoAssignment_2)
	{ after(grammarAccess.getExpAndAccess().getExpressaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpOr__Group__0__Impl
	rule__ExpOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpOrAccess().getValorAssignment_0()); }
	(rule__ExpOr__ValorAssignment_0)
	{ after(grammarAccess.getExpOrAccess().getValorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpOr__Group__1__Impl
	rule__ExpOr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpOrAccess().getOrKeyword_1()); }
	'or'
	{ after(grammarAccess.getExpOrAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpOr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpOrAccess().getExpressaoAssignment_2()); }
	(rule__ExpOr__ExpressaoAssignment_2)
	{ after(grammarAccess.getExpOrAccess().getExpressaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpEquals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpEquals__Group__0__Impl
	rule__ExpEquals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpEquals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpEqualsAccess().getValorAssignment_0()); }
	(rule__ExpEquals__ValorAssignment_0)
	{ after(grammarAccess.getExpEqualsAccess().getValorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpEquals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpEquals__Group__1__Impl
	rule__ExpEquals__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpEquals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpEqualsAccess().getEqualsSignEqualsSignKeyword_1()); }
	'=='
	{ after(grammarAccess.getExpEqualsAccess().getEqualsSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpEquals__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpEquals__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpEquals__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpEqualsAccess().getExpressaoAssignment_2()); }
	(rule__ExpEquals__ExpressaoAssignment_2)
	{ after(grammarAccess.getExpEqualsAccess().getExpressaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpConcat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpConcat__Group__0__Impl
	rule__ExpConcat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpConcatAccess().getValorAssignment_0()); }
	(rule__ExpConcat__ValorAssignment_0)
	{ after(grammarAccess.getExpConcatAccess().getValorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpConcat__Group__1__Impl
	rule__ExpConcat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpConcatAccess().getPlusSignPlusSignKeyword_1()); }
	'++'
	{ after(grammarAccess.getExpConcatAccess().getPlusSignPlusSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpConcat__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpConcatAccess().getExpressaoAssignment_2()); }
	(rule__ExpConcat__ExpressaoAssignment_2)
	{ after(grammarAccess.getExpConcatAccess().getExpressaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComandoSimples__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoSimples__Group_6__0__Impl
	rule__ComandoSimples__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoSimplesAccess().getLeftParenthesisKeyword_6_0()); }
	'('
	{ after(grammarAccess.getComandoSimplesAccess().getLeftParenthesisKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoSimples__Group_6__1__Impl
	rule__ComandoSimples__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoSimplesAccess().getComandoAssignment_6_1()); }
	(rule__ComandoSimples__ComandoAssignment_6_1)
	{ after(grammarAccess.getComandoSimplesAccess().getComandoAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoSimples__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoSimplesAccess().getRightParenthesisKeyword_6_2()); }
	')'
	{ after(grammarAccess.getComandoSimplesAccess().getRightParenthesisKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComandoDeclaracao__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoDeclaracao__Group__0__Impl
	rule__ComandoDeclaracao__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoDeclaracaoAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getComandoDeclaracaoAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoDeclaracao__Group__1__Impl
	rule__ComandoDeclaracao__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoDeclaracaoAccess().getDeclaracaoAssignment_1()); }
	(rule__ComandoDeclaracao__DeclaracaoAssignment_1)
	{ after(grammarAccess.getComandoDeclaracaoAccess().getDeclaracaoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoDeclaracao__Group__2__Impl
	rule__ComandoDeclaracao__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoDeclaracaoAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getComandoDeclaracaoAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoDeclaracao__Group__3__Impl
	rule__ComandoDeclaracao__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoDeclaracaoAccess().getComandoAssignment_3()); }
	(rule__ComandoDeclaracao__ComandoAssignment_3)
	{ after(grammarAccess.getComandoDeclaracaoAccess().getComandoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoDeclaracao__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoDeclaracaoAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getComandoDeclaracaoAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaracao__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaracao__Group_2__0__Impl
	rule__Declaracao__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getDeclaracaoAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaracao__Group_2__1__Impl
	rule__Declaracao__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoAccess().getDeclaracaoAssignment_2_1()); }
	(rule__Declaracao__DeclaracaoAssignment_2_1)
	{ after(grammarAccess.getDeclaracaoAccess().getDeclaracaoAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaracao__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getDeclaracaoAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaracaoComposta__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaracaoComposta__Group__0__Impl
	rule__DeclaracaoComposta__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoComposta__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoCompostaAccess().getDecVariavelAssignment_0()); }
	(rule__DeclaracaoComposta__DecVariavelAssignment_0)
	{ after(grammarAccess.getDeclaracaoCompostaAccess().getDecVariavelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoComposta__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaracaoComposta__Group__1__Impl
	rule__DeclaracaoComposta__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoComposta__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoCompostaAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getDeclaracaoCompostaAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoComposta__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaracaoComposta__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoComposta__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoCompostaAccess().getDeclaracaoAssignment_2()); }
	(rule__DeclaracaoComposta__DeclaracaoAssignment_2)
	{ after(grammarAccess.getDeclaracaoCompostaAccess().getDeclaracaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaracaoVariavel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaracaoVariavel__Group__0__Impl
	rule__DeclaracaoVariavel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoVariavelAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getDeclaracaoVariavelAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaracaoVariavel__Group__1__Impl
	rule__DeclaracaoVariavel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoVariavelAccess().getPidAssignment_1()); }
	(rule__DeclaracaoVariavel__PidAssignment_1)
	{ after(grammarAccess.getDeclaracaoVariavelAccess().getPidAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaracaoVariavel__Group__2__Impl
	rule__DeclaracaoVariavel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoVariavelAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getDeclaracaoVariavelAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaracaoVariavel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoVariavelAccess().getExpressaoAssignment_3()); }
	(rule__DeclaracaoVariavel__ExpressaoAssignment_3)
	{ after(grammarAccess.getDeclaracaoVariavelAccess().getExpressaoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ComandosAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getComandosComandoParserRuleCall_0()); }
		ruleComando
		{ after(grammarAccess.getModelAccess().getComandosComandoParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comando__SequenciaComandoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoAccess().getSequenciaComandoSequenciaComandoParserRuleCall_0_0()); }
		ruleSequenciaComando
		{ after(grammarAccess.getComandoAccess().getSequenciaComandoSequenciaComandoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comando__ComandoSimplesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoAccess().getComandoSimplesComandoSimplesParserRuleCall_1_0()); }
		ruleComandoSimples
		{ after(grammarAccess.getComandoAccess().getComandoSimplesComandoSimplesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenciaComando__ComandoSimplesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenciaComandoAccess().getComandoSimplesComandoSimplesParserRuleCall_0_0()); }
		ruleComandoSimples
		{ after(grammarAccess.getSequenciaComandoAccess().getComandoSimplesComandoSimplesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenciaComando__ComandoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenciaComandoAccess().getComandoComandoParserRuleCall_2_0()); }
		ruleComando
		{ after(grammarAccess.getSequenciaComandoAccess().getComandoComandoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IO__ReadAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIOAccess().getReadReadParserRuleCall_0_0()); }
		ruleRead
		{ after(grammarAccess.getIOAccess().getReadReadParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IO__WriteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIOAccess().getWriteWriteParserRuleCall_1_0()); }
		ruleWrite
		{ after(grammarAccess.getIOAccess().getWriteWriteParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__PidAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadAccess().getPidPIdParserRuleCall_2_0()); }
		rulePId
		{ after(grammarAccess.getReadAccess().getPidPIdParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
		ruleExpressao
		{ after(grammarAccess.getWriteAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__ExpressaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfThenElseAccess().getExpressaoExpressaoParserRuleCall_1_0()); }
		ruleExpressao
		{ after(grammarAccess.getIfThenElseAccess().getExpressaoExpressaoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__ComandoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfThenElseAccess().getComandoComandoParserRuleCall_3_0()); }
		ruleComando
		{ after(grammarAccess.getIfThenElseAccess().getComandoComandoParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__ComandoAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfThenElseAccess().getComandoComandoParserRuleCall_5_0()); }
		ruleComando
		{ after(grammarAccess.getIfThenElseAccess().getComandoComandoParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ExpressaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getExpressaoExpressaoParserRuleCall_1_0()); }
		ruleExpressao
		{ after(grammarAccess.getWhileAccess().getExpressaoExpressaoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ComandoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getComandoComandoParserRuleCall_3_0()); }
		ruleComando
		{ after(grammarAccess.getWhileAccess().getComandoComandoParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__SkipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSkipAccess().getSkipSkipKeyword_0()); }
		(
			{ before(grammarAccess.getSkipAccess().getSkipSkipKeyword_0()); }
			'skip'
			{ after(grammarAccess.getSkipAccess().getSkipSkipKeyword_0()); }
		)
		{ after(grammarAccess.getSkipAccess().getSkipSkipKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atribuicao__PidAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtribuicaoAccess().getPidPIdParserRuleCall_0_0()); }
		rulePId
		{ after(grammarAccess.getAtribuicaoAccess().getPidPIdParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atribuicao__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtribuicaoAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
		ruleExpressao
		{ after(grammarAccess.getAtribuicaoAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valor__IntTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValorAccess().getIntTypeVALORINTEIROTerminalRuleCall_0_0()); }
		RULE_VALORINTEIRO
		{ after(grammarAccess.getValorAccess().getIntTypeVALORINTEIROTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valor__StringTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValorAccess().getStringTypeVALORSTRINGTerminalRuleCall_1_0()); }
		RULE_VALORSTRING
		{ after(grammarAccess.getValorAccess().getStringTypeVALORSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valor__BoolTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValorAccess().getBoolTypeVALORBOOLEANOTerminalRuleCall_2_0()); }
		RULE_VALORBOOLEANO
		{ after(grammarAccess.getValorAccess().getBoolTypeVALORBOOLEANOTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpMenos__MenosExpressaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpMenosAccess().getMenosExpressaoExpressaoParserRuleCall_1_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpMenosAccess().getMenosExpressaoExpressaoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpNot__NotExpressaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpNotAccess().getNotExpressaoExpressaoParserRuleCall_1_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpNotAccess().getNotExpressaoExpressaoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpLenght__LengthExpressaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpLenghtAccess().getLengthExpressaoExpressaoParserRuleCall_1_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpLenghtAccess().getLengthExpressaoExpressaoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__PidAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpPrimariaAccess().getPidPIdParserRuleCall_0_0()); }
		rulePId
		{ after(grammarAccess.getExpPrimariaAccess().getPidPIdParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__ValorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpPrimariaAccess().getValorValorParserRuleCall_1_0()); }
		ruleValor
		{ after(grammarAccess.getExpPrimariaAccess().getValorValorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpPrimaria__ExpressaoAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpPrimariaAccess().getExpressaoExpressaoParserRuleCall_2_1_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpPrimariaAccess().getExpressaoExpressaoParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__MenosExpressaoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpUnariaAccess().getMenosExpressaoExpMenosParserRuleCall_0_0()); }
		ruleExpMenos
		{ after(grammarAccess.getExpUnariaAccess().getMenosExpressaoExpMenosParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__NotExpressaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpUnariaAccess().getNotExpressaoExpNotParserRuleCall_1_0()); }
		ruleExpNot
		{ after(grammarAccess.getExpUnariaAccess().getNotExpressaoExpNotParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__LengthExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpUnariaAccess().getLengthExpressaoExpLenghtParserRuleCall_2_0()); }
		ruleExpLenght
		{ after(grammarAccess.getExpUnariaAccess().getLengthExpressaoExpLenghtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpBinaria__SomaExpressaoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpBinariaAccess().getSomaExpressaoExpSomaParserRuleCall_0_0()); }
		ruleExpSoma
		{ after(grammarAccess.getExpBinariaAccess().getSomaExpressaoExpSomaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpBinaria__SubExpressaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpBinariaAccess().getSubExpressaoExpSubParserRuleCall_1_0()); }
		ruleExpSub
		{ after(grammarAccess.getExpBinariaAccess().getSubExpressaoExpSubParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpBinaria__OrExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpBinariaAccess().getOrExpressaoExpOrParserRuleCall_2_0()); }
		ruleExpOr
		{ after(grammarAccess.getExpBinariaAccess().getOrExpressaoExpOrParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpBinaria__AndExpressaoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpBinariaAccess().getAndExpressaoExpAndParserRuleCall_3_0()); }
		ruleExpAnd
		{ after(grammarAccess.getExpBinariaAccess().getAndExpressaoExpAndParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpBinaria__EqualsExpressaoAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpBinariaAccess().getEqualsExpressaoExpEqualsParserRuleCall_4_0()); }
		ruleExpEquals
		{ after(grammarAccess.getExpBinariaAccess().getEqualsExpressaoExpEqualsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpBinaria__ConcatExpressaoAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpBinariaAccess().getConcatExpressaoExpConcatParserRuleCall_5_0()); }
		ruleExpConcat
		{ after(grammarAccess.getExpBinariaAccess().getConcatExpressaoExpConcatParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSoma__ValorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSomaAccess().getValorValorParserRuleCall_0_0()); }
		ruleValor
		{ after(grammarAccess.getExpSomaAccess().getValorValorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSoma__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSomaAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpSomaAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSub__ValorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSubAccess().getValorValorParserRuleCall_0_0()); }
		ruleValor
		{ after(grammarAccess.getExpSubAccess().getValorValorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSub__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSubAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpSubAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAnd__ValorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAndAccess().getValorValorParserRuleCall_0_0()); }
		ruleValor
		{ after(grammarAccess.getExpAndAccess().getValorValorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAnd__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAndAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpAndAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOr__ValorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpOrAccess().getValorValorParserRuleCall_0_0()); }
		ruleValor
		{ after(grammarAccess.getExpOrAccess().getValorValorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOr__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpOrAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpOrAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpEquals__ValorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpEqualsAccess().getValorValorParserRuleCall_0_0()); }
		ruleValor
		{ after(grammarAccess.getExpEqualsAccess().getValorValorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpEquals__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpEqualsAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpEqualsAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcat__ValorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpConcatAccess().getValorValorParserRuleCall_0_0()); }
		ruleValor
		{ after(grammarAccess.getExpConcatAccess().getValorValorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcat__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpConcatAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
		ruleExpressao
		{ after(grammarAccess.getExpConcatAccess().getExpressaoExpressaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressao__ExpUnariaAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressaoAccess().getExpUnariaExpUnariaParserRuleCall_0_0()); }
		ruleExpUnaria
		{ after(grammarAccess.getExpressaoAccess().getExpUnariaExpUnariaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressao__ExpPrimariaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressaoAccess().getExpPrimariaExpPrimariaParserRuleCall_1_0()); }
		ruleExpPrimaria
		{ after(grammarAccess.getExpressaoAccess().getExpPrimariaExpPrimariaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressao__ExpBinariaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressaoAccess().getExpBinariaExpBinariaParserRuleCall_2_0()); }
		ruleExpBinaria
		{ after(grammarAccess.getExpressaoAccess().getExpBinariaExpBinariaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__SkipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getSkipSkipParserRuleCall_0_0()); }
		ruleSkip
		{ after(grammarAccess.getComandoSimplesAccess().getSkipSkipParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__AtribuicaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getAtribuicaoAtribuicaoParserRuleCall_1_0()); }
		ruleAtribuicao
		{ after(grammarAccess.getComandoSimplesAccess().getAtribuicaoAtribuicaoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__ComandoDeclaracaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getComandoDeclaracaoComandoDeclaracaoParserRuleCall_2_0()); }
		ruleComandoDeclaracao
		{ after(grammarAccess.getComandoSimplesAccess().getComandoDeclaracaoComandoDeclaracaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__WhileAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getWhileWhileParserRuleCall_3_0()); }
		ruleWhile
		{ after(grammarAccess.getComandoSimplesAccess().getWhileWhileParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__IfThenElseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getIfThenElseIfThenElseParserRuleCall_4_0()); }
		ruleIfThenElse
		{ after(grammarAccess.getComandoSimplesAccess().getIfThenElseIfThenElseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__IoAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getIoIOParserRuleCall_5_0()); }
		ruleIO
		{ after(grammarAccess.getComandoSimplesAccess().getIoIOParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSimples__ComandoAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSimplesAccess().getComandoComandoParserRuleCall_6_1_0()); }
		ruleComando
		{ after(grammarAccess.getComandoSimplesAccess().getComandoComandoParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__DeclaracaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoDeclaracaoAccess().getDeclaracaoDeclaracaoParserRuleCall_1_0()); }
		ruleDeclaracao
		{ after(grammarAccess.getComandoDeclaracaoAccess().getDeclaracaoDeclaracaoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoDeclaracao__ComandoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoDeclaracaoAccess().getComandoComandoParserRuleCall_3_0()); }
		ruleComando
		{ after(grammarAccess.getComandoDeclaracaoAccess().getComandoComandoParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__DecCompostaAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoAccess().getDecCompostaDeclaracaoCompostaParserRuleCall_0_0()); }
		ruleDeclaracaoComposta
		{ after(grammarAccess.getDeclaracaoAccess().getDecCompostaDeclaracaoCompostaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__DecVariavelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoAccess().getDecVariavelDeclaracaoVariavelParserRuleCall_1_0()); }
		ruleDeclaracaoVariavel
		{ after(grammarAccess.getDeclaracaoAccess().getDecVariavelDeclaracaoVariavelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__DeclaracaoAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoAccess().getDeclaracaoDeclaracaoParserRuleCall_2_1_0()); }
		ruleDeclaracao
		{ after(grammarAccess.getDeclaracaoAccess().getDeclaracaoDeclaracaoParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoComposta__DecVariavelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoCompostaAccess().getDecVariavelDeclaracaoVariavelParserRuleCall_0_0()); }
		ruleDeclaracaoVariavel
		{ after(grammarAccess.getDeclaracaoCompostaAccess().getDecVariavelDeclaracaoVariavelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoComposta__DeclaracaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoCompostaAccess().getDeclaracaoDeclaracaoParserRuleCall_2_0()); }
		ruleDeclaracao
		{ after(grammarAccess.getDeclaracaoCompostaAccess().getDeclaracaoDeclaracaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__PidAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoVariavelAccess().getPidPIdParserRuleCall_1_0()); }
		rulePId
		{ after(grammarAccess.getDeclaracaoVariavelAccess().getPidPIdParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaracaoVariavel__ExpressaoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoVariavelAccess().getExpressaoExpressaoParserRuleCall_3_0()); }
		ruleExpressao
		{ after(grammarAccess.getDeclaracaoVariavelAccess().getExpressaoExpressaoParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VALORINTEIRO : '1'..'9' ('0'..'9')*;

RULE_VALORBOOLEANO : ('true'|'false');

RULE_VALORSTRING : ('a'..'z')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
