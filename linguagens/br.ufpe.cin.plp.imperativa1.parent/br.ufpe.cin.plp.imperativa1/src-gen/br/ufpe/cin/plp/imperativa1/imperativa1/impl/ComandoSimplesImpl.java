/**
 * generated by Xtext 2.9.2
 */
package br.ufpe.cin.plp.imperativa1.imperativa1.impl;

import br.ufpe.cin.plp.imperativa1.imperativa1.Atribuicao;
import br.ufpe.cin.plp.imperativa1.imperativa1.Comando;
import br.ufpe.cin.plp.imperativa1.imperativa1.ComandoDeclaracao;
import br.ufpe.cin.plp.imperativa1.imperativa1.ComandoSimples;
import br.ufpe.cin.plp.imperativa1.imperativa1.IO;
import br.ufpe.cin.plp.imperativa1.imperativa1.IfThenElse;
import br.ufpe.cin.plp.imperativa1.imperativa1.Imperativa1Package;
import br.ufpe.cin.plp.imperativa1.imperativa1.Skip;
import br.ufpe.cin.plp.imperativa1.imperativa1.While;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Comando Simples</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.ComandoSimplesImpl#getSkip <em>Skip</em>}</li>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.ComandoSimplesImpl#getAtribuicao <em>Atribuicao</em>}</li>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.ComandoSimplesImpl#getComandoDeclaracao <em>Comando Declaracao</em>}</li>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.ComandoSimplesImpl#getWhile <em>While</em>}</li>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.ComandoSimplesImpl#getIfThenElse <em>If Then Else</em>}</li>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.ComandoSimplesImpl#getIo <em>Io</em>}</li>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.ComandoSimplesImpl#getComando <em>Comando</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComandoSimplesImpl extends MinimalEObjectImpl.Container implements ComandoSimples
{
  /**
   * The cached value of the '{@link #getSkip() <em>Skip</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSkip()
   * @generated
   * @ordered
   */
  protected Skip skip;

  /**
   * The cached value of the '{@link #getAtribuicao() <em>Atribuicao</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtribuicao()
   * @generated
   * @ordered
   */
  protected Atribuicao atribuicao;

  /**
   * The cached value of the '{@link #getComandoDeclaracao() <em>Comando Declaracao</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComandoDeclaracao()
   * @generated
   * @ordered
   */
  protected ComandoDeclaracao comandoDeclaracao;

  /**
   * The cached value of the '{@link #getWhile() <em>While</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhile()
   * @generated
   * @ordered
   */
  protected While while_;

  /**
   * The cached value of the '{@link #getIfThenElse() <em>If Then Else</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfThenElse()
   * @generated
   * @ordered
   */
  protected IfThenElse ifThenElse;

  /**
   * The cached value of the '{@link #getIo() <em>Io</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIo()
   * @generated
   * @ordered
   */
  protected IO io;

  /**
   * The cached value of the '{@link #getComando() <em>Comando</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComando()
   * @generated
   * @ordered
   */
  protected Comando comando;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComandoSimplesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Imperativa1Package.Literals.COMANDO_SIMPLES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Skip getSkip()
  {
    return skip;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSkip(Skip newSkip, NotificationChain msgs)
  {
    Skip oldSkip = skip;
    skip = newSkip;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__SKIP, oldSkip, newSkip);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSkip(Skip newSkip)
  {
    if (newSkip != skip)
    {
      NotificationChain msgs = null;
      if (skip != null)
        msgs = ((InternalEObject)skip).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__SKIP, null, msgs);
      if (newSkip != null)
        msgs = ((InternalEObject)newSkip).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__SKIP, null, msgs);
      msgs = basicSetSkip(newSkip, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__SKIP, newSkip, newSkip));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Atribuicao getAtribuicao()
  {
    return atribuicao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAtribuicao(Atribuicao newAtribuicao, NotificationChain msgs)
  {
    Atribuicao oldAtribuicao = atribuicao;
    atribuicao = newAtribuicao;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO, oldAtribuicao, newAtribuicao);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAtribuicao(Atribuicao newAtribuicao)
  {
    if (newAtribuicao != atribuicao)
    {
      NotificationChain msgs = null;
      if (atribuicao != null)
        msgs = ((InternalEObject)atribuicao).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO, null, msgs);
      if (newAtribuicao != null)
        msgs = ((InternalEObject)newAtribuicao).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO, null, msgs);
      msgs = basicSetAtribuicao(newAtribuicao, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO, newAtribuicao, newAtribuicao));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComandoDeclaracao getComandoDeclaracao()
  {
    return comandoDeclaracao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComandoDeclaracao(ComandoDeclaracao newComandoDeclaracao, NotificationChain msgs)
  {
    ComandoDeclaracao oldComandoDeclaracao = comandoDeclaracao;
    comandoDeclaracao = newComandoDeclaracao;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO, oldComandoDeclaracao, newComandoDeclaracao);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComandoDeclaracao(ComandoDeclaracao newComandoDeclaracao)
  {
    if (newComandoDeclaracao != comandoDeclaracao)
    {
      NotificationChain msgs = null;
      if (comandoDeclaracao != null)
        msgs = ((InternalEObject)comandoDeclaracao).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO, null, msgs);
      if (newComandoDeclaracao != null)
        msgs = ((InternalEObject)newComandoDeclaracao).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO, null, msgs);
      msgs = basicSetComandoDeclaracao(newComandoDeclaracao, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO, newComandoDeclaracao, newComandoDeclaracao));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public While getWhile()
  {
    return while_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhile(While newWhile, NotificationChain msgs)
  {
    While oldWhile = while_;
    while_ = newWhile;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__WHILE, oldWhile, newWhile);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWhile(While newWhile)
  {
    if (newWhile != while_)
    {
      NotificationChain msgs = null;
      if (while_ != null)
        msgs = ((InternalEObject)while_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__WHILE, null, msgs);
      if (newWhile != null)
        msgs = ((InternalEObject)newWhile).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__WHILE, null, msgs);
      msgs = basicSetWhile(newWhile, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__WHILE, newWhile, newWhile));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IfThenElse getIfThenElse()
  {
    return ifThenElse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfThenElse(IfThenElse newIfThenElse, NotificationChain msgs)
  {
    IfThenElse oldIfThenElse = ifThenElse;
    ifThenElse = newIfThenElse;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE, oldIfThenElse, newIfThenElse);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIfThenElse(IfThenElse newIfThenElse)
  {
    if (newIfThenElse != ifThenElse)
    {
      NotificationChain msgs = null;
      if (ifThenElse != null)
        msgs = ((InternalEObject)ifThenElse).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE, null, msgs);
      if (newIfThenElse != null)
        msgs = ((InternalEObject)newIfThenElse).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE, null, msgs);
      msgs = basicSetIfThenElse(newIfThenElse, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE, newIfThenElse, newIfThenElse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IO getIo()
  {
    return io;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIo(IO newIo, NotificationChain msgs)
  {
    IO oldIo = io;
    io = newIo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__IO, oldIo, newIo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIo(IO newIo)
  {
    if (newIo != io)
    {
      NotificationChain msgs = null;
      if (io != null)
        msgs = ((InternalEObject)io).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__IO, null, msgs);
      if (newIo != null)
        msgs = ((InternalEObject)newIo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__IO, null, msgs);
      msgs = basicSetIo(newIo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__IO, newIo, newIo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Comando getComando()
  {
    return comando;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComando(Comando newComando, NotificationChain msgs)
  {
    Comando oldComando = comando;
    comando = newComando;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__COMANDO, oldComando, newComando);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComando(Comando newComando)
  {
    if (newComando != comando)
    {
      NotificationChain msgs = null;
      if (comando != null)
        msgs = ((InternalEObject)comando).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__COMANDO, null, msgs);
      if (newComando != null)
        msgs = ((InternalEObject)newComando).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.COMANDO_SIMPLES__COMANDO, null, msgs);
      msgs = basicSetComando(newComando, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.COMANDO_SIMPLES__COMANDO, newComando, newComando));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Imperativa1Package.COMANDO_SIMPLES__SKIP:
        return basicSetSkip(null, msgs);
      case Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO:
        return basicSetAtribuicao(null, msgs);
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO:
        return basicSetComandoDeclaracao(null, msgs);
      case Imperativa1Package.COMANDO_SIMPLES__WHILE:
        return basicSetWhile(null, msgs);
      case Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE:
        return basicSetIfThenElse(null, msgs);
      case Imperativa1Package.COMANDO_SIMPLES__IO:
        return basicSetIo(null, msgs);
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO:
        return basicSetComando(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Imperativa1Package.COMANDO_SIMPLES__SKIP:
        return getSkip();
      case Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO:
        return getAtribuicao();
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO:
        return getComandoDeclaracao();
      case Imperativa1Package.COMANDO_SIMPLES__WHILE:
        return getWhile();
      case Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE:
        return getIfThenElse();
      case Imperativa1Package.COMANDO_SIMPLES__IO:
        return getIo();
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO:
        return getComando();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Imperativa1Package.COMANDO_SIMPLES__SKIP:
        setSkip((Skip)newValue);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO:
        setAtribuicao((Atribuicao)newValue);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO:
        setComandoDeclaracao((ComandoDeclaracao)newValue);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__WHILE:
        setWhile((While)newValue);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE:
        setIfThenElse((IfThenElse)newValue);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__IO:
        setIo((IO)newValue);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO:
        setComando((Comando)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Imperativa1Package.COMANDO_SIMPLES__SKIP:
        setSkip((Skip)null);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO:
        setAtribuicao((Atribuicao)null);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO:
        setComandoDeclaracao((ComandoDeclaracao)null);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__WHILE:
        setWhile((While)null);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE:
        setIfThenElse((IfThenElse)null);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__IO:
        setIo((IO)null);
        return;
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO:
        setComando((Comando)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Imperativa1Package.COMANDO_SIMPLES__SKIP:
        return skip != null;
      case Imperativa1Package.COMANDO_SIMPLES__ATRIBUICAO:
        return atribuicao != null;
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO_DECLARACAO:
        return comandoDeclaracao != null;
      case Imperativa1Package.COMANDO_SIMPLES__WHILE:
        return while_ != null;
      case Imperativa1Package.COMANDO_SIMPLES__IF_THEN_ELSE:
        return ifThenElse != null;
      case Imperativa1Package.COMANDO_SIMPLES__IO:
        return io != null;
      case Imperativa1Package.COMANDO_SIMPLES__COMANDO:
        return comando != null;
    }
    return super.eIsSet(featureID);
  }

} //ComandoSimplesImpl
