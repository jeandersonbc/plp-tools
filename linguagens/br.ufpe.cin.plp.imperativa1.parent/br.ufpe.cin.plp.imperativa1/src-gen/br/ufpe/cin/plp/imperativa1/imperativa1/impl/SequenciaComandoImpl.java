/**
 * generated by Xtext 2.9.2
 */
package br.ufpe.cin.plp.imperativa1.imperativa1.impl;

import br.ufpe.cin.plp.imperativa1.imperativa1.Comando;
import br.ufpe.cin.plp.imperativa1.imperativa1.ComandoSimples;
import br.ufpe.cin.plp.imperativa1.imperativa1.Imperativa1Package;
import br.ufpe.cin.plp.imperativa1.imperativa1.SequenciaComando;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sequencia Comando</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.SequenciaComandoImpl#getComandoSimples <em>Comando Simples</em>}</li>
 *   <li>{@link br.ufpe.cin.plp.imperativa1.imperativa1.impl.SequenciaComandoImpl#getComando <em>Comando</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SequenciaComandoImpl extends MinimalEObjectImpl.Container implements SequenciaComando
{
  /**
   * The cached value of the '{@link #getComandoSimples() <em>Comando Simples</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComandoSimples()
   * @generated
   * @ordered
   */
  protected ComandoSimples comandoSimples;

  /**
   * The cached value of the '{@link #getComando() <em>Comando</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComando()
   * @generated
   * @ordered
   */
  protected Comando comando;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SequenciaComandoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Imperativa1Package.Literals.SEQUENCIA_COMANDO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComandoSimples getComandoSimples()
  {
    return comandoSimples;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComandoSimples(ComandoSimples newComandoSimples, NotificationChain msgs)
  {
    ComandoSimples oldComandoSimples = comandoSimples;
    comandoSimples = newComandoSimples;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES, oldComandoSimples, newComandoSimples);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComandoSimples(ComandoSimples newComandoSimples)
  {
    if (newComandoSimples != comandoSimples)
    {
      NotificationChain msgs = null;
      if (comandoSimples != null)
        msgs = ((InternalEObject)comandoSimples).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES, null, msgs);
      if (newComandoSimples != null)
        msgs = ((InternalEObject)newComandoSimples).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES, null, msgs);
      msgs = basicSetComandoSimples(newComandoSimples, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES, newComandoSimples, newComandoSimples));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Comando getComando()
  {
    return comando;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComando(Comando newComando, NotificationChain msgs)
  {
    Comando oldComando = comando;
    comando = newComando;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Imperativa1Package.SEQUENCIA_COMANDO__COMANDO, oldComando, newComando);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComando(Comando newComando)
  {
    if (newComando != comando)
    {
      NotificationChain msgs = null;
      if (comando != null)
        msgs = ((InternalEObject)comando).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.SEQUENCIA_COMANDO__COMANDO, null, msgs);
      if (newComando != null)
        msgs = ((InternalEObject)newComando).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Imperativa1Package.SEQUENCIA_COMANDO__COMANDO, null, msgs);
      msgs = basicSetComando(newComando, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Imperativa1Package.SEQUENCIA_COMANDO__COMANDO, newComando, newComando));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES:
        return basicSetComandoSimples(null, msgs);
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO:
        return basicSetComando(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES:
        return getComandoSimples();
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO:
        return getComando();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES:
        setComandoSimples((ComandoSimples)newValue);
        return;
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO:
        setComando((Comando)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES:
        setComandoSimples((ComandoSimples)null);
        return;
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO:
        setComando((Comando)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO_SIMPLES:
        return comandoSimples != null;
      case Imperativa1Package.SEQUENCIA_COMANDO__COMANDO:
        return comando != null;
    }
    return super.eIsSet(featureID);
  }

} //SequenciaComandoImpl
