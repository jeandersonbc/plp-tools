grammar br.ufpe.cin.plp.imperativa1.Imperativa1 with org.eclipse.xtext.common.Terminals

generate imperativa1 "http://www.ufpe.br/cin/plp/imperativa1/Imperativa1"

Model:
	comandos+=Comando*;

Comando:
	( => sequenciaComando=SequenciaComando | comandoSimples=ComandoSimples)
;

SequenciaComando:
	comandoSimples=ComandoSimples ';' comando=Comando
;

IO:
	read=Read
	| write=Write
;

Read:
	'read' '(' pid=PId ')'
;

Write:
	'write' '(' expressao=Expressao ')'
;

IfThenElse:
	'if' expressao=Expressao 'then' comando=Comando 'else' comando=Comando
;

While:
	'while' expressao=Expressao 'do' comando=Comando
;

Skip:
	skip='skip'
;

Atribuicao:
	pid=PId ':=' expressao=Expressao
;

PId:
	VALORSTRING(VALORSTRING | VALORINTEIRO)*
;

Valor:
	intType=VALORINTEIRO
	| stringType=VALORSTRING
	| boolType=VALORBOOLEANO

;

ExpMenos:
	'-' menosExpressao=Expressao	
;

ExpNot:
	'not' notExpressao=Expressao
;

ExpLenght:
	'length' lengthExpressao=Expressao
;

ExpPrimaria:
	pid=PId
	| valor=Valor
	| '(' expressao=Expressao ')'
;

ExpUnaria:
	menosExpressao=ExpMenos
	| notExpressao=ExpNot
	| lengthExpressao=ExpLenght
;

ExpBinaria:
	 somaExpressao=ExpSoma
	 | subExpressao=ExpSub
	 | orExpressao=ExpOr
	 | andExpressao=ExpAnd
	 | equalsExpressao=ExpEquals
	 | concatExpressao=ExpConcat
;

ExpSoma:
	valor=Valor '+' expressao=Expressao
;

ExpSub:
	valor=Valor '-' expressao=Expressao
;

ExpAnd:
	valor=Valor 'and' expressao=Expressao
;

ExpOr:
	valor=Valor 'or' expressao=Expressao
;

ExpEquals:
	valor=Valor '==' expressao=Expressao
;

ExpConcat:
	valor=Valor '++' expressao=Expressao
;

Expressao:
	=> expUnaria=ExpUnaria
	| expPrimaria=ExpPrimaria
	| expBinaria=ExpBinaria
;

ComandoSimples:
	skip=Skip
	| atribuicao=Atribuicao
	| comandoDeclaracao=ComandoDeclaracao
	| while=While
	| ifThenElse=IfThenElse
	| io=IO
	| '(' comando=Comando ')'
;

ComandoDeclaracao:
	'{' declaracao=Declaracao ';' comando=Comando '}'	
;

Declaracao:
	=> decComposta=DeclaracaoComposta
	| decVariavel=DeclaracaoVariavel
	| '(' declaracao=Declaracao ')'
;

DeclaracaoComposta:
	decVariavel=DeclaracaoVariavel ',' declaracao=Declaracao
;

DeclaracaoVariavel:
	'var' pid=PId '=' expressao=Expressao
;

terminal VALORINTEIRO:
	('1'..'9')('0'..'9')*
;

terminal VALORBOOLEANO:
	'true'
	| 'false'
;

terminal VALORSTRING:
	('a'..'z')+
;